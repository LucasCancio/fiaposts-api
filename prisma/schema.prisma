// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Teacher {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post[]

  @@map("users")
}

model Post {
  id           Int            @id @default(autoincrement())
  title        String
  content      String
  imageUrl     String?
  slug         String?
  author       Teacher        @relation(fields: [authorId], references: [id])
  authorId     Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  PostCategory PostCategory[]

  @@map("posts")
}

model Category {
  id           Int            @id @default(autoincrement())
  name         String
  color        String?        @default("#000000")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  PostCategory PostCategory[]

  @@map("categories")
}

model PostCategory {
  postId     Int
  post       Post     @relation(fields: [postId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId])
  @@map("post_categories")
}

model Student {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("students")
}
